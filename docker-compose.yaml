version: '3'
services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Connect to Docker socket
      - ./traefik-logs:/var/log/traefik/
    command:
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.format=json"
      - "--api.insecure=true"  # Enable the insecure dashboard for simplicity
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - internal_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./tmp/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=256MB'
    labels:
      - "traefik.enable=false"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - internal_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./grafana/:/etc/grafana/
      - ./tmp/grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${Grafana_domain}`)"  # Access via domain name
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${Grafana_admin_user}
      - GF_SECURITY_ADMIN_PASSWORD=${Grafana_admin_password}
      - GF_USERS_ALLOW_SIGN_UP=${Grafana_allow_sign_up}
    networks:
      - internal_network

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    volumes:
      - ./telegraf/:/etc/telegraf/
      - ./traefik-logs:/var/log/traefik/ # Mount Traefik logs to get metrics 
    restart: unless-stopped
    networks:
      - internal_network
    labels:
      - "traefik.enable=false" 
      - "traefik.http.routers.telegraf.service=telegraf"
      - "traefik.http.services.telegraf.loadbalancer.server.port=9273"

  lychee:
    container_name: lychee
    image: lycheeorg/lychee
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MariaDB_root_password}
      - LYCHEE_DATABASE=${lychee_db_name}
      - LYCHEE_USERNAME=${lychee_db_user}
      - LYCHEE_PASSWORD=${lychee_db_password}
    volumes:
      - ./lychee/uploads:/var/www/html/uploads
      - ./lychee/data:/var/www/html/data
    networks:
      - internal_network
    depends_on:
      - lychee_db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lychee.rule=Host(`${Lychee_domain}`)"  # Access via domain name
      - "traefik.http.routers.lychee.service=lychee"
      - "traefik.http.services.lychee.loadbalancer.server.port=80"

  lychee_db:
    container_name: lychee_db
    image: mariadb:10
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MariaDB_root_password}
      - MYSQL_DATABASE=${lychee_db_name}
      - MYSQL_USER=${lychee_db_user}
      - MYSQL_PASSWORD=${lychee_db_password}
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - internal_network

networks:
  internal_network: